
import datetime

import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from settings import token
from create_bd import create_db
import db_functions
from telebot import types
import re

name = ''
description = ''
instagram_username = ''
telegram_username = ''
photo_id = ''

stage_of_registration = 0

bot = telebot.TeleBot(token)


@bot.message_handler(content_types=['photo'])
def photo_hendler(message):

    global photo_id

    photo_id = message.photo[-1].file_id

    if stage_of_registration == 5:

        bot.send_message(message.chat.id, 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å üéâ\n–ù–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ—ã–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –ø–∏—à–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—É @ceobuddy\n\n–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/main_menu')

        add_master_to_bd_after_registration()




def add_master_to_bd_after_registration():

    global name
    global description
    global instagram_username
    global telegram_username
    global photo_id
    global stage_of_registration

    db_functions.add_master([
        name,
        description,
        instagram_username,
        telegram_username,
        photo_id
    ])

    name = ''
    description = ''
    instagram_username = ''
    telegram_username = ''
    photo_id = ''

    stage_of_registration = 0



def gen_main_markup():
    markup = InlineKeyboardMarkup()
    markup.row_width = 3
    markup.row_height = 3
    markup.add(InlineKeyboardButton("üìò –°–ø–∏—Å–æ–∫", callback_data="/masters"),
               InlineKeyboardButton("üéä –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="/registration"))
    return markup


def stage_of_registration_markup():

    global stage_of_registration

    markup = InlineKeyboardMarkup()

    markup.row_width = 3

    markup.row_height = 3

    if stage_of_registration == 1:

        markup.add(InlineKeyboardButton("‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="/registration1"))

    if stage_of_registration == 2:
        markup.add(InlineKeyboardButton("‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="/registration2"))

    if stage_of_registration == 3:
        markup.add(InlineKeyboardButton("‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="/registration3"))

    if stage_of_registration == 4:
        markup.add(InlineKeyboardButton("‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="/registration4"))

    return markup

@bot.message_handler(content_types=['location'])
def location (message):
    if message.location is not None:
        print(message.location.longitude)
        print(message.location.latitude)


@bot.message_handler(commands=['start'])
def start_message(message):

    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
    keyboard.add(button_geo)
    bot.send_message(message.chat.id, "–ü–æ–¥–µ–ª–∏—Å—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º", reply_markup=keyboard)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏ –ø–æ–º–æ—â–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã –Ω–∞–π–¥–µ—à—å –º–∞–Ω–∏–∫—é—Ä—â–∏—Ü –∏ —Å–º–æ–∂—à–µ—å —Å—Ä–∞–∑—É –∂–µ –∏–º –Ω–∞–ø–∏—Å–∞—Ç—å! –¢–∞–∫–∂e —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ø–∞—Å—Ç—å –≤ —ç—Ç–æ—Ç —Å–∞–º—ã–π —Å–ø–∏—Å–æ–∫ –º–∞–Ω–∏–∫—é—Ä—â–∏—Ü.", reply_markup=gen_main_markup())


@bot.message_handler(commands=['main_menu'])
def start_message(message):
    bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=gen_main_markup())


@bot.message_handler(func=lambda message: True)
def message_handler(message):

    global name
    global description
    global instagram_username
    global telegram_username
    global photo_id

    global stage_of_registration

    if stage_of_registration == 0:

        stage_of_registration += 1

        name = message.text

        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', reply_markup=stage_of_registration_markup())

    elif stage_of_registration == 1:

        stage_of_registration += 1

        description = message.text

        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', reply_markup=stage_of_registration_markup())

    elif stage_of_registration == 2:

        stage_of_registration += 1

        instagram_username = message.text

        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', reply_markup=stage_of_registration_markup())

    elif stage_of_registration == 3:

        stage_of_registration += 1

        telegram_username = message.text

        bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', reply_markup=stage_of_registration_markup())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏. –ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å –∑–∞–∫–ª—é—á–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞.
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global name
    global description
    global instagram_username
    global telegram_username
    global stage_of_registration

    if call.data == "/masters":

        for master in db_functions.get_masters_list():
            bot.send_photo(call.message.chat.id,
                           f'{master[4]}',
                           caption=f'{master[0]}\n\n‚≠ê {master[1]}\n\n‚≠êÔ∏è –ò–Ω—Å—Ç–∞–≥—Ä–∞–º: https://www.instagram.com/{master[3]}\n\n‚≠ê –¢–µ–ª–µ–≥—Ä–∞–º: @{master[2]}\n\n–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\nüëáüëáüëáüëá\n/main_menu')

    elif call.data == "/registration":

        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')

    elif call.data == "/registration1":

        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ:')

    elif call.data == "/registration2":

        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–∏–∫ –≤ –∏–Ω—Å—Ç–µ:')

    elif call.data == "/registration3":

        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–∏–∫ –≤ —Ç–µ–ª–µ–≥–µ:')

    elif call.data == "/registration4":

        bot.send_message(call.message.chat.id, '–°–∫–∏–¥—ã–≤–∞–π —Ñ–æ—Ç–∫—É')

        stage_of_registration += 1



print('Bot in work....')
create_db()
bot.polling(none_stop=True, interval=0)
